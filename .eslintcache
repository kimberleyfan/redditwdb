[{"/Users/kimberley/wdb-dev-proj/frontend-project/src/index.js":"1","/Users/kimberley/wdb-dev-proj/frontend-project/src/App.js":"2","/Users/kimberley/wdb-dev-proj/frontend-project/src/reportWebVitals.js":"3","/Users/kimberley/wdb-dev-proj/frontend-project/src/pages/BrowsePage.js":"4","/Users/kimberley/wdb-dev-proj/frontend-project/src/components/BackgroundTheme.js":"5","/Users/kimberley/wdb-dev-proj/frontend-project/src/components/CardSummary.js":"6","/Users/kimberley/wdb-dev-proj/frontend-project/src/components/FullPost.js":"7","/Users/kimberley/wdb-dev-proj/frontend-project/src/pages/FullPostPage.js":"8"},{"size":501,"mtime":1612074058243,"results":"9","hashOfConfig":"10"},{"size":582,"mtime":1612168134241,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611127237058,"results":"12","hashOfConfig":"10"},{"size":804,"mtime":1612168115286,"results":"13","hashOfConfig":"10"},{"size":681,"mtime":1612168040864,"results":"14","hashOfConfig":"10"},{"size":1894,"mtime":1612168038836,"results":"15","hashOfConfig":"10"},{"size":1796,"mtime":1612168152063,"results":"16","hashOfConfig":"10"},{"size":361,"mtime":1612168205267,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"n6utn1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"/Users/kimberley/wdb-dev-proj/frontend-project/src/index.js",[],["40","41"],"/Users/kimberley/wdb-dev-proj/frontend-project/src/App.js",["42"],"import React from \"react\";\nimport BrowsePage from \"./pages/BrowsePage\";\nimport \"./App.css\";\nimport FullPostPage from \"./pages/FullPostPage\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n        <Route path=\"/home/:id\" component={FullPostPage}>\n          </Route>\n          <Route exact path=\"/home\" component = {BrowsePage}> \n            <BrowsePage />\n          </Route> \n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/kimberley/wdb-dev-proj/frontend-project/src/reportWebVitals.js",[],"/Users/kimberley/wdb-dev-proj/frontend-project/src/pages/BrowsePage.js",[],"/Users/kimberley/wdb-dev-proj/frontend-project/src/components/BackgroundTheme.js",["43","44"],"import React from \"react\";\nimport \"../css/BackgroundTheme.css\";\nimport Skyline from \"../img/berkeley-skyline.png\";\nimport {Link} from 'react-router-dom';\nimport Logo from \"../img/berkeley-logo.png\";\n\nconst BackgroundTheme = (props) => {\n  return (\n    <div className=\"entire-background-theme\">\n      <img src={Skyline} className=\"campus-landscape\"></img>\n      <Link to=\"/home\">\n      <div className=\"subtitle-strip\">\n        <img src={Logo} className=\"logo\">\n        </img>\n        <p className=\"subforum-name\">R/Berkeley</p>\n        <p className=\"description\">#1 Public University in the World</p>\n      </div>\n      </Link>\n    </div>\n  );\n};\n\n\n\nexport default BackgroundTheme;\n","/Users/kimberley/wdb-dev-proj/frontend-project/src/components/CardSummary.js",["45","46"],"import React from \"react\";\nimport \"../css/CardSummary.css\";\nimport PropTypes from 'prop-types';\nimport Truncate from 'react-truncate';\n \nconst obj = require(\"/Users/kimberley/wdb-dev-proj/frontend-project/src/Data.json\");\n\n//source for date manipulation: https://stackoverflow.com/questions/542938/how-do-i-get-the-number-of-days-between-two-dates-in-javascript\n\nexport const parseDate = (str) => {\n  var mdy = str.toString().split('/');\n  return new Date(mdy[2], mdy[0]-1, mdy[1]);\n}\n\nexport const dateDiff = (first, second) => {\n  return Math.round((second-first)/(1000*60*60*24));\n}\n\nexport const dateRightNow = () => {\n  var today = new Date();\n  var dd = today.getDate();\n  var mm = today.getMonth()+1; \n  var yyyy = today.getFullYear();\n  if(dd<10) {\n      dd='0'+dd;\n  } \n\n  if(mm<10) {\n      mm='0'+mm;\n  } \n\n  today = mm+'/'+dd+'/'+yyyy;\n  return today\n}\n//source for line truncation: ttps://www.npmjs.com/package/react-truncate \n\nconst CardSummary = ({post}) => {\n    return (\n\n      <div className=\"card\">\n        <div className=\"left-column\">\n          <p class=\"grey-text\"> Posted by {post.author} {dateDiff(parseDate(post.published), parseDate(dateRightNow()))} days ago\n          </p>\n          <Truncate\n                    className=\"title\"\n                    lines={1}\n                    ellipsis={(\n                        <span>...</span>\n                    )}>{post.title}</Truncate>\n          <Truncate\n                    className=\"grey-text\"\n                    lines={3}\n                    ellipsis={(\n                        <span>...</span>\n                    )}>{post.content}...</Truncate>\n        </div>\n        <div className=\"right-column\"> \n          <p>upvotes: {post.upvotes}</p>\n          <p>downvotes: {post.downvotes}</p>\n          <p>total: {post.upvotes - post.downvotes}</p>\n        </div>\n      </div>\n    );\n  };\n  \n\nexport default CardSummary;\n","/Users/kimberley/wdb-dev-proj/frontend-project/src/components/FullPost.js",["47"],"import {parseDate, dateDiff, dateRightNow} from \"../components/CardSummary.js\";\nimport \"../components/CardSummary.js\";\nimport \"../css/FullPost.css\";\n\nconst obj = require(\"/Users/kimberley/wdb-dev-proj/frontend-project/src/Data.json\");\n\nfunction FullPost(match) {\n    const postid = match.params.id;\n    const posts = obj[\"posts\"];\n    let post;\n    for (const individual of posts){\n      if ((individual.id)==postid){\n        post = individual;\n    }}\n    // let currpost = posts.filter((post)=> postid==post.id)    \n  return (\n    \n      <div className=\"fullcard\">\n        <p className=\"grey-text\"> Posted by {post.author} {dateDiff(parseDate(post.published), parseDate(dateRightNow()))} days ago\n        </p>\n        <p className=\"title\">{post.title}</p>\n          <div> \n            <p className=\"votes\">upvotes: {post.upvotes}</p>\n            <p className=\"votes\">downvotes: {post.downvotes}</p>\n            <p className=\"votes\">total: {post.upvotes - post.downvotes}</p>\n          </div>\n          <p className=\"main-text\"> {post.content} </p>\n          <div className=\"comments\"> \n            {listOfComments(post.comments)}\n          </div> \n      </div>\n    );\n  };\n  \n\nfunction listOfComments(comments) {\n  return (\n    <div>\n        {comments.map((comment) => {\n          return (\n            <div>\n            <p className=\"grey-text\">{comment.author}</p>\n            <div className=\"each-comment\">    \n              <p className=\"comment-content\">{comment.content}</p>\n              <div className=\"comment-votes\">\n                <p className=\"comvotes\"> +{comment.upvotes}</p>\n                <p className=\"comvotes\"> -{comment.downvotes}</p>\n              </div>\n            </div>\n            </div>\n            );\n          })}\n      </div>\n      );\n  }\nexport default FullPost;\n","/Users/kimberley/wdb-dev-proj/frontend-project/src/pages/FullPostPage.js",["48"],"import React, { Component } from \"react\";\nimport \"../css/BrowsePage.css\";\nimport BackgroundTheme from \"../components/BackgroundTheme.js\";\nimport FullPost from \"../components/FullPost.js\";\n\nconst FullPostPage = ({match}) => {\n  return (\n      <div>\n          <BackgroundTheme/>\n          {FullPost(match)}\n      </div>\n    );\n  };\n  \nexport default FullPostPage;",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":9,"column":3,"nodeType":"55","messageId":"56","endLine":9,"endColumn":11},{"ruleId":"57","severity":1,"message":"58","line":10,"column":7,"nodeType":"59","endLine":10,"endColumn":55},{"ruleId":"57","severity":1,"message":"58","line":13,"column":9,"nodeType":"59","endLine":13,"endColumn":42},{"ruleId":"53","severity":1,"message":"60","line":3,"column":8,"nodeType":"55","messageId":"56","endLine":3,"endColumn":17},{"ruleId":"53","severity":1,"message":"61","line":6,"column":7,"nodeType":"55","messageId":"56","endLine":6,"endColumn":10},{"ruleId":"62","severity":1,"message":"63","line":12,"column":26,"nodeType":"64","messageId":"65","endLine":12,"endColumn":28},{"ruleId":"53","severity":1,"message":"66","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'PropTypes' is defined but never used.","'obj' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]